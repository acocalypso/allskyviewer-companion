name: Android Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Is this a pre-release?'
        required: true
        type: boolean
        default: false

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
      packages: write  # If you're also publishing packages

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from build.gradle
        id: get_version
        run: |
          VERSION=$(grep 'versionName = ' app/build.gradle.kts | sed 's/.*versionName = "\(.*\)".*/\1/')
          echo "Version found: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract latest changelog entry
        id: changelog
        run: |
          LATEST=$(sed -n '/^## \[[0-9]\+\.[0-9]\+\.[0-9]\+\]/,/^## \[/p' CHANGELOG.md | head -n -1 | tail -n +2)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$LATEST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup build tool version variable
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOL_VERSION

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: Rename APK
        run: |
          mv ${{steps.sign_app.outputs.signedReleaseFile}} allsky-companion-${{ steps.get_version.outputs.version }}.apk
          echo "RELEASE_APK=allsky-companion-${{ steps.get_version.outputs.version }}.apk" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ steps.get_version.outputs.version }}
          tag_name: v${{ steps.get_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: ${{ env.RELEASE_APK }}
          draft: false
          prerelease: ${{ inputs.prerelease }}
